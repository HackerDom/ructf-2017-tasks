flags = ["RuCTF:Temolokek", "RuCTF:Xabecetok", "RuCTF:Kerihimok", "RuCTF:Botavasik", "RuCTF:Temiriwak", "RuCTF:Fagecewak", "RuCTF:Xabihikek", "RuCTF:Fagirimok", "RuCTF:Fagolomok", "RuCTF:Solavapuk", "RuCTF:Xabolomok", "RuCTF:Fagavamok", "RuCTF:Kerecepuk", "RuCTF:Botavamok", "RuCTF:Xabirikek", "RuCTF:Temyjypuk", "RuCTF:Fagyjywak", "RuCTF:Fagirisik", "RuCTF:Keryjymok", "RuCTF:Botyjymok", "RuCTF:Botihisik", "RuCTF:Temavawak", "RuCTF:Botyjywak", "RuCTF:Solavatok", "RuCTF:Botirikek", "RuCTF:Keravatok", "RuCTF:Xabecemok", "RuCTF:Xabavakek", "RuCTF:Botolosik", "RuCTF:Sololowak", "RuCTF:Botiritok", "RuCTF:Botolowak", "RuCTF:Xabolowak", "RuCTF:Xabiripuk", "RuCTF:Solecepuk", "RuCTF:Temecesik", "RuCTF:Temavasik", "RuCTF:Xabyjypuk", "RuCTF:Botavakek", "RuCTF:Kerecemok", "RuCTF:Solecewak", "RuCTF:Xabyjymok", "RuCTF:Temavatok", "RuCTF:Botyjykek", "RuCTF:Botecepuk", "RuCTF:Xabolosik", "RuCTF:Xabirisik", "RuCTF:Solirimok", "RuCTF:Botecetok", "RuCTF:Keriritok", "RuCTF:Botirimok", "RuCTF:Temolosik", "RuCTF:Temiripuk", "RuCTF:Solihipuk", "RuCTF:Keravawak", "RuCTF:Botyjypuk", "RuCTF:Solecetok", "RuCTF:Temiritok", "RuCTF:Solihikek", "RuCTF:Solecemok", "RuCTF:Keryjypuk", "RuCTF:Solyjykek", "RuCTF:Botecemok", "RuCTF:Solyjywak", "RuCTF:Fagecemok", "RuCTF:Solihimok", "RuCTF:Solavawak", "RuCTF:Soliriwak", "RuCTF:Xabihimok", "RuCTF:Xabyjysik", "RuCTF:Fagolokek", "RuCTF:Botihitok", "RuCTF:Temavapuk", "RuCTF:Temavamok", "RuCTF:Keryjykek", "RuCTF:Temirimok", "RuCTF:Kerolopuk", "RuCTF:Fagyjykek", "RuCTF:Fagolosik", "RuCTF:Keririkek", "RuCTF:Xabirimok", "RuCTF:Kerolomok", "RuCTF:Xabihiwak", "RuCTF:Keravapuk", "RuCTF:Botolopuk", "RuCTF:Sololomok", "RuCTF:Temecewak", "RuCTF:Fagecepuk", "RuCTF:Xabecewak", "RuCTF:Soliritok", "RuCTF:Solyjytok", "RuCTF:Botavatok", "RuCTF:Solirisik", "RuCTF:Solihiwak", "RuCTF:Temolotok", "RuCTF:Fagihitok", "RuCTF:Keryjysik", "RuCTF:Fagavawak", "RuCTF:Kerolosik", "RuCTF:Keririsik", "RuCTF:Xabavapuk", "RuCTF:Keravamok", "RuCTF:Botavawak", "RuCTF:Fagihikek", "RuCTF:Fagihimok", "RuCTF:Kerecekek", "RuCTF:Temyjywak", "RuCTF:Solavakek", "RuCTF:Kerecetok", "RuCTF:Xabecekek", "RuCTF:Temecekek", "RuCTF:Solecekek", "RuCTF:Fagihiwak", "RuCTF:Temirisik", "RuCTF:Kerihikek", "RuCTF:Xabolotok", "RuCTF:Fagolopuk", "RuCTF:Fagyjysik", "RuCTF:Temihipuk", "RuCTF:Fagavatok", "RuCTF:Fagecesik", "RuCTF:Botyjytok", "RuCTF:Kerihitok", "RuCTF:Sololosik", "RuCTF:Temihitok", "RuCTF:Fagecekek", "RuCTF:Fagihisik", "RuCTF:Botolomok", "RuCTF:Xabyjykek", "RuCTF:Xabiritok", "RuCTF:Kerihipuk", "RuCTF:Temirikek", "RuCTF:Temolomok", "RuCTF:Temecetok", "RuCTF:Keravasik", "RuCTF:Solihisik", "RuCTF:Botecewak", "RuCTF:Fagirikek", "RuCTF:Fagavasik", "RuCTF:Temecepuk", "RuCTF:Xabolokek", "RuCTF:Fagiriwak", "RuCTF:Sololokek", "RuCTF:Temavakek", "RuCTF:Fagyjypuk", "RuCTF:Kerolowak", "RuCTF:Kerolotok", "RuCTF:Xabihitok", "RuCTF:Xabavatok", "RuCTF:Temyjysik", "RuCTF:Fagolotok", "RuCTF:Fagavakek", "RuCTF:Temyjytok", "RuCTF:Keravakek", "RuCTF:Fagolowak", "RuCTF:Botolotok", "RuCTF:Xabecepuk", "RuCTF:Botihimok", "RuCTF:Botihiwak", "RuCTF:Temihiwak", "RuCTF:Xabihisik", "RuCTF:Solyjymok", "RuCTF:Xabiriwak", "RuCTF:Temyjykek", "RuCTF:Fagihipuk", "RuCTF:Solyjysik", "RuCTF:Botecekek", "RuCTF:Xabavasik", "RuCTF:Temolopuk", "RuCTF:Kerecesik", "RuCTF:Xabyjywak", "RuCTF:Soliripuk", "RuCTF:Botiriwak", "RuCTF:Botolokek", "RuCTF:Botihikek", "RuCTF:Temecemok", "RuCTF:Fagavapuk", "RuCTF:Temolowak", "RuCTF:Temihimok", "RuCTF:Xabyjytok", "RuCTF:Keririmok", "RuCTF:Kerihisik", "RuCTF:Temihikek", "RuCTF:Solihitok", "RuCTF:Botyjysik", "RuCTF:Botavapuk", "RuCTF:Keriripuk", "RuCTF:Xabavamok", "RuCTF:Botihipuk", "RuCTF:Solavasik", "RuCTF:Kerolokek", "RuCTF:Botirisik", "RuCTF:Keryjywak", "RuCTF:Solirikek", "RuCTF:Xabavawak", "RuCTF:Kerecewak", "RuCTF:Fagiripuk", "RuCTF:Solavamok", "RuCTF:Fagyjymok", "RuCTF:Fagecetok", "RuCTF:Botecesik", "RuCTF:Xabecesik", "RuCTF:Sololopuk", "RuCTF:Keririwak", "RuCTF:Temihisik", "RuCTF:Kerihiwak", "RuCTF:Fagiritok", "RuCTF:Botiripuk", "RuCTF:Solecesik", "RuCTF:Temyjymok", "RuCTF:Xabihipuk", "RuCTF:Xabolopuk", "RuCTF:Keryjytok", "RuCTF:Sololotok", "RuCTF:Fagyjytok", "RuCTF:Solyjypuk"]


def check(attempt, context):
	if attempt.answer == flags[attempt.participant.id]:
		return Checked(True)
	if attempt.answer in list:
		return CheckedPlagiarist(False, flags.index(attempt.answer))
	return Checked(False)